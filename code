import pandas as pd
import numpy as np
from tkinter import Tk, filedialog
import matplotlib.pyplot as plt

#returns the limits
def limits(vals, dados):
    lm1 = np.mean(vals[0]) #lm1 might be the mean of r, var or sd
    ls1 = lm1 + 3*np.std(dados)
    li1 = lm1 - 3 * np.std(dados)
    if li1 < 0:
        li1 = 0
    L1=[ls1,lm1,li1]
    lm2 = np.mean(vals[1]) #lm2 is the mean of Xmean
    ls2 = lm2 + 3*np.std(dados)
    li2 = lm2 - 3 * np.std(dados)
    L2 = [ls2, lm2, li2]
    return(L1,L2)

def std_values(dados):
    s = []
    xmean = []
    i = 0
    for _ in dados:
        s.append(np.std(dados[i]))
        xmean.append(np.mean(dados[i]))
        i = i + 1

    return (s,xmean)

#returns the variance and the mean of each sample
def var_values(dados):
    v = []
    xmean = []
    i=0
    for _ in dados:
        v.append(np.var(dados[i]))
        xmean.append(np.mean(dados[i]))
        i=i+1

    return (v,xmean)

# returns the range and mean of each sample
def amplitude_values(dados):
    r = []
    xmean=[]
    i=0
    for _ in dados:
        r.append(np.max(dados[i]) - np.min(dados[i]))
        xmean.append(np.mean(dados[i]))
        i=i+1

    return (r,xmean)


#calls the proper method for each graphic and store the values
def values(Choice, Dados):
    if Choice == 'amplitude':
        val = amplitude_values(Dados)
    elif Choice == 'var':
        val = var_values(Dados)
    else:
        val = mean_values(Dados)
    lim=limits(val,Dados)

    return val,lim



#choose the best grafic to use based on data's caracteristics
def grafchoice(DD):
    data = np.array(DD)
    if np.isnan(data).any() == True:
        i=0
        cdata=[]
        for _ in data:
            x= data[i]
            x = x[~np.isnan(x)]
            cdata[i]=x
            i=i+1
        data=cdata
        choice = 'std'
    else:
        if len(DD.iloc[0]) < 10:
            choice = 'amplitude'
        else:
            choice = 'var'
    to_plot=values(choice, data)
    return to_plot,choice

def PlotGrafr (Plots): #ploting
    plt.figure(figsize=(10, 6))
    plt.subplot(211)
    plt.plot(Plots[0][0][1], label='Dados', color='blue')
    plt.scatter(range(len(Plots[0][0][1])), Plots[0][0][1], color='blue')
    plt.axhline(Plots[0][1][1][1], color='orange', linestyle='--', label='Mean')
    plt.axhline(Plots[0][1][1][0], color='red', linestyle='--', label='Control\n Limits')
    plt.axhline(Plots[0][1][1][2], color='red', linestyle='--')
    plt.title('x̄ control chart')
    plt.legend(loc='upper left', bbox_to_anchor=(1, 0.5))
    plt.grid(True)

    plt.subplot(212)
    plt.plot(Plots[0][0][0], label='Dados', color='blue')
    plt.scatter(range(len(Plots[0][0][0])), Plots[0][0][0], color='blue')
    plt.axhline(Plots[0][1][0][1], color='orange', linestyle='--', label='Mean')
    plt.axhline(Plots[0][1][0][0], color='red', linestyle='--', label='Upper Control Limit')
    plt.axhline(Plots[0][1][0][2], color='red', linestyle='--', label='Lower Control Limit')
    if Plots[1] == 'amplitude':
        plt.title('R Control Chart')
    elif Plots[1] == 'var':
        plt.title('S² Control Chart')
    else:
        plt.title('Sd Control Chart')
    plt.grid(True)

    plt.show()


#main
dd = pd.read_excel("C:\\Users\\Master\\Documents\\seraqvai.xlsx")
plots = grafchoice(dd)
n=PlotGrafr(plots)
